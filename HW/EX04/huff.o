# 1 "huff_main.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "huff_main.c"


# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 367 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 410 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 411 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 368 "/usr/include/features.h" 2 3 4
# 391 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 392 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 1 3 4
# 216 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3 4

# 216 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;







typedef long int __quad_t;
typedef unsigned long int __u_quad_t;
# 121 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 122 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 31 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 32 "/usr/include/libio.h" 2 3 4
# 49 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 50 "/usr/include/libio.h" 2 3 4
# 144 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;





typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 173 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 241 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 289 "/usr/include/libio.h" 3 4
  __off64_t _offset;







  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;

  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 333 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 385 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 429 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 459 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 90 "/usr/include/stdio.h" 3 4
typedef __off_t off_t;
# 102 "/usr/include/stdio.h" 3 4
typedef __ssize_t ssize_t;







typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));




extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));








extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;





extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;
# 227 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 252 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 306 "/usr/include/stdio.h" 3 4
extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) ;
# 319 "/usr/include/stdio.h" 3 4
extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) ;






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));








extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 412 "/usr/include/stdio.h" 3 4
extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 550 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 561 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 594 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 640 "/usr/include/stdio.h" 3 4

# 665 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;








extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 737 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 773 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;




extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;








extern void perror (const char *__s);






# 1 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];
# 854 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
# 872 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));
# 912 "/usr/include/stdio.h" 3 4
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 942 "/usr/include/stdio.h" 3 4

# 4 "huff_main.c" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 1 3 4
# 328 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3 4
typedef int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4








# 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
# 50 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3 4
typedef enum
{
  P_ALL,
  P_PID,
  P_PGID
} idtype_t;
# 42 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
# 64 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 36 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 2 3 4
# 60 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 2 3 4






# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap-16.h" 1 3 4
# 36 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 2 3 4
# 44 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline unsigned int
__bswap_32 (unsigned int __bsx)
{
  return __builtin_bswap32 (__bsx);
}
# 108 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{
  return __builtin_bswap64 (__bsx);
}
# 61 "/usr/include/endian.h" 2 3 4
# 65 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 2 3 4

union wait
  {
    int w_status;
    struct
      {

 unsigned int __w_termsig:7;
 unsigned int __w_coredump:1;
 unsigned int __w_retcode:8;
 unsigned int:16;







      } __wait_terminated;
    struct
      {

 unsigned int __w_stopval:8;
 unsigned int __w_stopsig:8;
 unsigned int:16;






      } __wait_stopped;
  };
# 43 "/usr/include/stdlib.h" 2 3 4
# 67 "/usr/include/stdlib.h" 3 4
typedef union
  {
    union wait *__uptr;
    int *__iptr;
  } __WAIT_STATUS __attribute__ ((__transparent_union__));
# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

# 305 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;




# 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4






typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;
# 60 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;
# 98 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;
# 115 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 132 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 57 "/usr/include/time.h" 3 4


typedef __clock_t clock_t;



# 73 "/usr/include/time.h" 3 4


typedef __time_t time_t;



# 91 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 103 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 133 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 146 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 1 3 4
# 147 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 194 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 219 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/select.h" 2 3 4
# 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



typedef __sigset_t sigset_t;





# 1 "/usr/include/time.h" 1 3 4
# 120 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    __syscall_slong_t tv_nsec;
  };
# 44 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/time.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 46 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 64 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 96 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4

# 106 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 118 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 131 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4

# 220 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3 4


__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 58 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3 4

# 223 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 270 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;





typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;
# 90 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;

    unsigned int __nusers;



    int __kind;

    short __spins;
    short __elision;
    __pthread_list_t __list;
# 125 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
  } __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{

  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;
    int __writer;
    int __shared;
    signed char __rwelision;




    unsigned char __pad1[7];


    unsigned long int __pad2;


    unsigned int __flags;

  } __data;
# 220 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 271 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



# 315 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));






extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));




extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));









extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));




extern void cfree (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));



# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 493 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;




extern void *aligned_alloc (size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (2))) ;




extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int at_quick_exit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void quick_exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));







extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 578 "/usr/include/stdlib.h" 3 4
extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 606 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 619 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 641 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 662 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 711 "/usr/include/stdlib.h" 3 4





extern int system (const char *__command) ;

# 733 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) ;






typedef int (*__compar_fn_t) (const void *, const void *);
# 751 "/usr/include/stdlib.h" 3 4



extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;







extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 774 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 811 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));






extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));








extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 898 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;
# 950 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 955 "/usr/include/stdlib.h" 2 3 4
# 967 "/usr/include/stdlib.h" 3 4

# 5 "huff_main.c" 2
# 1 "/usr/include/string.h" 1 3 4
# 27 "/usr/include/string.h" 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 1 3 4
# 33 "/usr/include/string.h" 2 3 4









extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));






extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 92 "/usr/include/string.h" 3 4
extern void *memchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


# 123 "/usr/include/string.h" 3 4


extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));






# 1 "/usr/include/xlocale.h" 1 3 4
# 27 "/usr/include/xlocale.h" 3 4
typedef struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;


typedef __locale_t locale_t;
# 160 "/usr/include/string.h" 2 3 4


extern int strcoll_l (const char *__s1, const char *__s2, __locale_t __l)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    __locale_t __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));




extern char *strdup (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 206 "/usr/include/string.h" 3 4

# 231 "/usr/include/string.h" 3 4
extern char *strchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 258 "/usr/include/string.h" 3 4
extern char *strrchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


# 277 "/usr/include/string.h" 3 4



extern size_t strcspn (const char *__s, const char *__reject)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 310 "/usr/include/string.h" 3 4
extern char *strpbrk (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 337 "/usr/include/string.h" 3 4
extern char *strstr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));




extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
# 392 "/usr/include/string.h" 3 4


extern size_t strlen (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strnlen (const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strerror (int __errnum) __attribute__ ((__nothrow__ , __leaf__));

# 422 "/usr/include/string.h" 3 4
extern int strerror_r (int __errnum, char *__buf, size_t __buflen) __asm__ ("" "__xpg_strerror_r") __attribute__ ((__nothrow__ , __leaf__))

                        __attribute__ ((__nonnull__ (2)));
# 440 "/usr/include/string.h" 3 4
extern char *strerror_l (int __errnum, __locale_t __l) __attribute__ ((__nothrow__ , __leaf__));





extern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern void bcopy (const void *__src, void *__dest, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 484 "/usr/include/string.h" 3 4
extern char *index (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 512 "/usr/include/string.h" 3 4
extern char *rindex (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern int ffs (int __i) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 529 "/usr/include/string.h" 3 4
extern int strcasecmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 552 "/usr/include/string.h" 3 4
extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 658 "/usr/include/string.h" 3 4

# 6 "huff_main.c" 2
# 1 "huff.h" 1



# 3 "huff.h"
void abort_program(const char * msg);

double log2(double n);
# 19 "huff.h"
typedef struct sym_info
{
 int count;
 struct sym_info * left, * right, * parent;
 unsigned char index, code_length;
 short pos;
 unsigned int code;
} SINFO;

typedef struct huffman_info
{
 FILE * fp_txt;
 SINFO sinfo[256], inode[256], * p_sinfo[256], * root_node;
 int text_count, symbol_count;
 int vertical_pitch;
} HINFO;



char * convert_char(int c);
void SINFO_print_huffman_code(SINFO * sinfo);

void HINFO_initialize(HINFO * hinfo);
void SINFO_assign_code(SINFO * sinfo);
void HINFO_sort_symbols(HINFO * hinfo);

void HINFO_write_compressed_file(HINFO * hinfo, const char * fname);
void HINFO_check_compressed_file(HINFO * hinfo, const char * fname);
void HINFO_read_compressed_file(HINFO * hinfo, const char * fname);

void HINFO_print_entropy(HINFO * hinfo);
void HINFO_print_tree_structure(HINFO * hinfo);
# 7 "huff_main.c" 2
# 1 "bmp.h" 1
# 12 "bmp.h"
typedef struct pixel
{
 unsigned char R, G, B, I;
} PIX;

typedef struct bmp_info
{
 PIX * bitmap;
 PIX colormap[256];
 int colormap_size;
 int size_x, size_y, size_xy;
 int out_pix_bits;
} BMPIMG;

void BMPIMG_initialize(BMPIMG * img);
void BMPIMG_destroy(BMPIMG * img);
int BMPIMG_save(BMPIMG * img);
int BMPIMG_open(BMPIMG * img, const char * fname);
# 8 "huff_main.c" 2


void abort_program(const char * msg)
{
 printf("abort: (%s) is FALSE!\n", msg);
 exit(-1);
}

# 1 "/usr/include/math.h" 1 3 4
# 28 "/usr/include/math.h" 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/math-vector.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/math-vector.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/math-vector.h" 2 3 4
# 32 "/usr/include/math.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/huge_val.h" 1 3 4
# 36 "/usr/include/math.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/huge_valf.h" 1 3 4
# 38 "/usr/include/math.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/huge_vall.h" 1 3 4
# 39 "/usr/include/math.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/inf.h" 1 3 4
# 42 "/usr/include/math.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/nan.h" 1 3 4
# 45 "/usr/include/math.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3 4

# 28 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3 4
typedef float float_t;
typedef double double_t;
# 49 "/usr/include/math.h" 2 3 4
# 83 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 52 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern double acos (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __acos (double __x) __attribute__ ((__nothrow__ , __leaf__));

extern double asin (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __asin (double __x) __attribute__ ((__nothrow__ , __leaf__));

extern double atan (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __atan (double __x) __attribute__ ((__nothrow__ , __leaf__));

extern double atan2 (double __y, double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __atan2 (double __y, double __x) __attribute__ ((__nothrow__ , __leaf__));


 extern double cos (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __cos (double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern double sin (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __sin (double __x) __attribute__ ((__nothrow__ , __leaf__));

extern double tan (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __tan (double __x) __attribute__ ((__nothrow__ , __leaf__));




extern double cosh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __cosh (double __x) __attribute__ ((__nothrow__ , __leaf__));

extern double sinh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __sinh (double __x) __attribute__ ((__nothrow__ , __leaf__));

extern double tanh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __tanh (double __x) __attribute__ ((__nothrow__ , __leaf__));

# 86 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern double acosh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __acosh (double __x) __attribute__ ((__nothrow__ , __leaf__));

extern double asinh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __asinh (double __x) __attribute__ ((__nothrow__ , __leaf__));

extern double atanh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __atanh (double __x) __attribute__ ((__nothrow__ , __leaf__));







 extern double exp (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __exp (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double frexp (double __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__)); extern double __frexp (double __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__));


extern double ldexp (double __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__)); extern double __ldexp (double __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__));


 extern double log (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __log (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double log10 (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __log10 (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double modf (double __x, double *__iptr) __attribute__ ((__nothrow__ , __leaf__)); extern double __modf (double __x, double *__iptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

# 126 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern double expm1 (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __expm1 (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double log1p (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __log1p (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double logb (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __logb (double __x) __attribute__ ((__nothrow__ , __leaf__));






extern double exp2 (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __exp2 (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double log2 (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __log2 (double __x) __attribute__ ((__nothrow__ , __leaf__));








 extern double pow (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __pow (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));


extern double sqrt (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __sqrt (double __x) __attribute__ ((__nothrow__ , __leaf__));





extern double hypot (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __hypot (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));






extern double cbrt (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __cbrt (double __x) __attribute__ ((__nothrow__ , __leaf__));








extern double ceil (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __ceil (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern double fabs (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __fabs (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern double floor (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __floor (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern double fmod (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __fmod (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));




extern int __isinf (double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern int __finite (double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));








extern int isinf (double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int finite (double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern double drem (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __drem (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));



extern double significand (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __significand (double __x) __attribute__ ((__nothrow__ , __leaf__));





extern double copysign (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __copysign (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));






extern double nan (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __nan (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));





extern int __isnan (double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));






extern int isnan (double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));





extern double j0 (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __j0 (double) __attribute__ ((__nothrow__ , __leaf__));
extern double j1 (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __j1 (double) __attribute__ ((__nothrow__ , __leaf__));
extern double jn (int, double) __attribute__ ((__nothrow__ , __leaf__)); extern double __jn (int, double) __attribute__ ((__nothrow__ , __leaf__));
extern double y0 (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __y0 (double) __attribute__ ((__nothrow__ , __leaf__));
extern double y1 (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __y1 (double) __attribute__ ((__nothrow__ , __leaf__));
extern double yn (int, double) __attribute__ ((__nothrow__ , __leaf__)); extern double __yn (int, double) __attribute__ ((__nothrow__ , __leaf__));






extern double erf (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __erf (double) __attribute__ ((__nothrow__ , __leaf__));
extern double erfc (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __erfc (double) __attribute__ ((__nothrow__ , __leaf__));
extern double lgamma (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __lgamma (double) __attribute__ ((__nothrow__ , __leaf__));






extern double tgamma (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __tgamma (double) __attribute__ ((__nothrow__ , __leaf__));





extern double gamma (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __gamma (double) __attribute__ ((__nothrow__ , __leaf__));






extern double lgamma_r (double, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__)); extern double __lgamma_r (double, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__));







extern double rint (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __rint (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double nextafter (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __nextafter (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));

extern double nexttoward (double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __nexttoward (double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern double remainder (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __remainder (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));



extern double scalbn (double __x, int __n) __attribute__ ((__nothrow__ , __leaf__)); extern double __scalbn (double __x, int __n) __attribute__ ((__nothrow__ , __leaf__));



extern int ilogb (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern int __ilogb (double __x) __attribute__ ((__nothrow__ , __leaf__));




extern double scalbln (double __x, long int __n) __attribute__ ((__nothrow__ , __leaf__)); extern double __scalbln (double __x, long int __n) __attribute__ ((__nothrow__ , __leaf__));



extern double nearbyint (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __nearbyint (double __x) __attribute__ ((__nothrow__ , __leaf__));



extern double round (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __round (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern double trunc (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __trunc (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern double remquo (double __x, double __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__)); extern double __remquo (double __x, double __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__));






extern long int lrint (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lrint (double __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llrint (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llrint (double __x) __attribute__ ((__nothrow__ , __leaf__));



extern long int lround (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lround (double __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llround (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llround (double __x) __attribute__ ((__nothrow__ , __leaf__));



extern double fdim (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __fdim (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));


extern double fmax (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __fmax (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern double fmin (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __fmin (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int __fpclassify (double __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));


extern int __signbit (double __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));



extern double fma (double __x, double __y, double __z) __attribute__ ((__nothrow__ , __leaf__)); extern double __fma (double __x, double __y, double __z) __attribute__ ((__nothrow__ , __leaf__));




# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern double scalb (double __x, double __n) __attribute__ ((__nothrow__ , __leaf__)); extern double __scalb (double __x, double __n) __attribute__ ((__nothrow__ , __leaf__));
# 84 "/usr/include/math.h" 2 3 4
# 104 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 52 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern float acosf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __acosf (float __x) __attribute__ ((__nothrow__ , __leaf__));

extern float asinf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __asinf (float __x) __attribute__ ((__nothrow__ , __leaf__));

extern float atanf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __atanf (float __x) __attribute__ ((__nothrow__ , __leaf__));

extern float atan2f (float __y, float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __atan2f (float __y, float __x) __attribute__ ((__nothrow__ , __leaf__));


 extern float cosf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __cosf (float __x) __attribute__ ((__nothrow__ , __leaf__));

 extern float sinf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __sinf (float __x) __attribute__ ((__nothrow__ , __leaf__));

extern float tanf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __tanf (float __x) __attribute__ ((__nothrow__ , __leaf__));




extern float coshf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __coshf (float __x) __attribute__ ((__nothrow__ , __leaf__));

extern float sinhf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __sinhf (float __x) __attribute__ ((__nothrow__ , __leaf__));

extern float tanhf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __tanhf (float __x) __attribute__ ((__nothrow__ , __leaf__));

# 86 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern float acoshf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __acoshf (float __x) __attribute__ ((__nothrow__ , __leaf__));

extern float asinhf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __asinhf (float __x) __attribute__ ((__nothrow__ , __leaf__));

extern float atanhf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __atanhf (float __x) __attribute__ ((__nothrow__ , __leaf__));







 extern float expf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __expf (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float frexpf (float __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__)); extern float __frexpf (float __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__));


extern float ldexpf (float __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__)); extern float __ldexpf (float __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__));


 extern float logf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __logf (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float log10f (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __log10f (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float modff (float __x, float *__iptr) __attribute__ ((__nothrow__ , __leaf__)); extern float __modff (float __x, float *__iptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

# 126 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern float expm1f (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __expm1f (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float log1pf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __log1pf (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float logbf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __logbf (float __x) __attribute__ ((__nothrow__ , __leaf__));






extern float exp2f (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __exp2f (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float log2f (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __log2f (float __x) __attribute__ ((__nothrow__ , __leaf__));








 extern float powf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __powf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));


extern float sqrtf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __sqrtf (float __x) __attribute__ ((__nothrow__ , __leaf__));





extern float hypotf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __hypotf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));






extern float cbrtf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __cbrtf (float __x) __attribute__ ((__nothrow__ , __leaf__));








extern float ceilf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __ceilf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern float fabsf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __fabsf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern float floorf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __floorf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern float fmodf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __fmodf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));




extern int __isinff (float __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern int __finitef (float __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));








extern int isinff (float __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int finitef (float __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern float dremf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __dremf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));



extern float significandf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __significandf (float __x) __attribute__ ((__nothrow__ , __leaf__));





extern float copysignf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __copysignf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));






extern float nanf (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __nanf (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));





extern int __isnanf (float __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));






extern int isnanf (float __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));





extern float j0f (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __j0f (float) __attribute__ ((__nothrow__ , __leaf__));
extern float j1f (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __j1f (float) __attribute__ ((__nothrow__ , __leaf__));
extern float jnf (int, float) __attribute__ ((__nothrow__ , __leaf__)); extern float __jnf (int, float) __attribute__ ((__nothrow__ , __leaf__));
extern float y0f (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __y0f (float) __attribute__ ((__nothrow__ , __leaf__));
extern float y1f (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __y1f (float) __attribute__ ((__nothrow__ , __leaf__));
extern float ynf (int, float) __attribute__ ((__nothrow__ , __leaf__)); extern float __ynf (int, float) __attribute__ ((__nothrow__ , __leaf__));






extern float erff (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __erff (float) __attribute__ ((__nothrow__ , __leaf__));
extern float erfcf (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __erfcf (float) __attribute__ ((__nothrow__ , __leaf__));
extern float lgammaf (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __lgammaf (float) __attribute__ ((__nothrow__ , __leaf__));






extern float tgammaf (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __tgammaf (float) __attribute__ ((__nothrow__ , __leaf__));





extern float gammaf (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __gammaf (float) __attribute__ ((__nothrow__ , __leaf__));






extern float lgammaf_r (float, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__)); extern float __lgammaf_r (float, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__));







extern float rintf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __rintf (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float nextafterf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __nextafterf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));

extern float nexttowardf (float __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __nexttowardf (float __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern float remainderf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __remainderf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));



extern float scalbnf (float __x, int __n) __attribute__ ((__nothrow__ , __leaf__)); extern float __scalbnf (float __x, int __n) __attribute__ ((__nothrow__ , __leaf__));



extern int ilogbf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern int __ilogbf (float __x) __attribute__ ((__nothrow__ , __leaf__));




extern float scalblnf (float __x, long int __n) __attribute__ ((__nothrow__ , __leaf__)); extern float __scalblnf (float __x, long int __n) __attribute__ ((__nothrow__ , __leaf__));



extern float nearbyintf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __nearbyintf (float __x) __attribute__ ((__nothrow__ , __leaf__));



extern float roundf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __roundf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern float truncf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __truncf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern float remquof (float __x, float __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__)); extern float __remquof (float __x, float __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__));






extern long int lrintf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lrintf (float __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llrintf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llrintf (float __x) __attribute__ ((__nothrow__ , __leaf__));



extern long int lroundf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lroundf (float __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llroundf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llroundf (float __x) __attribute__ ((__nothrow__ , __leaf__));



extern float fdimf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __fdimf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));


extern float fmaxf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __fmaxf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern float fminf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __fminf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int __fpclassifyf (float __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));


extern int __signbitf (float __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));



extern float fmaf (float __x, float __y, float __z) __attribute__ ((__nothrow__ , __leaf__)); extern float __fmaf (float __x, float __y, float __z) __attribute__ ((__nothrow__ , __leaf__));




# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern float scalbf (float __x, float __n) __attribute__ ((__nothrow__ , __leaf__)); extern float __scalbf (float __x, float __n) __attribute__ ((__nothrow__ , __leaf__));
# 105 "/usr/include/math.h" 2 3 4
# 151 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 52 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern long double acosl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __acosl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

extern long double asinl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __asinl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

extern long double atanl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __atanl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

extern long double atan2l (long double __y, long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __atan2l (long double __y, long double __x) __attribute__ ((__nothrow__ , __leaf__));


 extern long double cosl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __cosl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern long double sinl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __sinl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

extern long double tanl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __tanl (long double __x) __attribute__ ((__nothrow__ , __leaf__));




extern long double coshl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __coshl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

extern long double sinhl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __sinhl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

extern long double tanhl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __tanhl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

# 86 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern long double acoshl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __acoshl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

extern long double asinhl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __asinhl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

extern long double atanhl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __atanhl (long double __x) __attribute__ ((__nothrow__ , __leaf__));







 extern long double expl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __expl (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double frexpl (long double __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__)); extern long double __frexpl (long double __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__));


extern long double ldexpl (long double __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__)); extern long double __ldexpl (long double __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__));


 extern long double logl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __logl (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double log10l (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __log10l (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double modfl (long double __x, long double *__iptr) __attribute__ ((__nothrow__ , __leaf__)); extern long double __modfl (long double __x, long double *__iptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

# 126 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern long double expm1l (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __expm1l (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double log1pl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __log1pl (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double logbl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __logbl (long double __x) __attribute__ ((__nothrow__ , __leaf__));






extern long double exp2l (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __exp2l (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double log2l (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __log2l (long double __x) __attribute__ ((__nothrow__ , __leaf__));








 extern long double powl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __powl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));


extern long double sqrtl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __sqrtl (long double __x) __attribute__ ((__nothrow__ , __leaf__));





extern long double hypotl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __hypotl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));






extern long double cbrtl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __cbrtl (long double __x) __attribute__ ((__nothrow__ , __leaf__));








extern long double ceill (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __ceill (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern long double fabsl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __fabsl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern long double floorl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __floorl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern long double fmodl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __fmodl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));




extern int __isinfl (long double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern int __finitel (long double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));








extern int isinfl (long double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int finitel (long double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern long double dreml (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __dreml (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));



extern long double significandl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __significandl (long double __x) __attribute__ ((__nothrow__ , __leaf__));





extern long double copysignl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __copysignl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));






extern long double nanl (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __nanl (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));





extern int __isnanl (long double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));






extern int isnanl (long double __value) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));





extern long double j0l (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __j0l (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double j1l (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __j1l (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double jnl (int, long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __jnl (int, long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double y0l (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __y0l (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double y1l (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __y1l (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double ynl (int, long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __ynl (int, long double) __attribute__ ((__nothrow__ , __leaf__));






extern long double erfl (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __erfl (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double erfcl (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __erfcl (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double lgammal (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __lgammal (long double) __attribute__ ((__nothrow__ , __leaf__));






extern long double tgammal (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __tgammal (long double) __attribute__ ((__nothrow__ , __leaf__));





extern long double gammal (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __gammal (long double) __attribute__ ((__nothrow__ , __leaf__));






extern long double lgammal_r (long double, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__)); extern long double __lgammal_r (long double, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__));







extern long double rintl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __rintl (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double nextafterl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __nextafterl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));

extern long double nexttowardl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __nexttowardl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern long double remainderl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __remainderl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));



extern long double scalbnl (long double __x, int __n) __attribute__ ((__nothrow__ , __leaf__)); extern long double __scalbnl (long double __x, int __n) __attribute__ ((__nothrow__ , __leaf__));



extern int ilogbl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern int __ilogbl (long double __x) __attribute__ ((__nothrow__ , __leaf__));




extern long double scalblnl (long double __x, long int __n) __attribute__ ((__nothrow__ , __leaf__)); extern long double __scalblnl (long double __x, long int __n) __attribute__ ((__nothrow__ , __leaf__));



extern long double nearbyintl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __nearbyintl (long double __x) __attribute__ ((__nothrow__ , __leaf__));



extern long double roundl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __roundl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern long double truncl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __truncl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern long double remquol (long double __x, long double __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__)); extern long double __remquol (long double __x, long double __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__));






extern long int lrintl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lrintl (long double __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llrintl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llrintl (long double __x) __attribute__ ((__nothrow__ , __leaf__));



extern long int lroundl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lroundl (long double __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llroundl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llroundl (long double __x) __attribute__ ((__nothrow__ , __leaf__));



extern long double fdiml (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __fdiml (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));


extern long double fmaxl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __fmaxl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern long double fminl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __fminl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int __fpclassifyl (long double __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));


extern int __signbitl (long double __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));



extern long double fmal (long double __x, long double __y, long double __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double __fmal (long double __x, long double __y, long double __z) __attribute__ ((__nothrow__ , __leaf__));




# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern long double scalbl (long double __x, long double __n) __attribute__ ((__nothrow__ , __leaf__)); extern long double __scalbl (long double __x, long double __n) __attribute__ ((__nothrow__ , __leaf__));
# 152 "/usr/include/math.h" 2 3 4
# 168 "/usr/include/math.h" 3 4
extern int signgam;
# 209 "/usr/include/math.h" 3 4
enum
  {
    FP_NAN =

      0,
    FP_INFINITE =

      1,
    FP_ZERO =

      2,
    FP_SUBNORMAL =

      3,
    FP_NORMAL =

      4
  };
# 347 "/usr/include/math.h" 3 4
typedef enum
{
  _IEEE_ = -1,
  _SVID_,
  _XOPEN_,
  _POSIX_,
  _ISOC_
} _LIB_VERSION_TYPE;




extern _LIB_VERSION_TYPE _LIB_VERSION;
# 372 "/usr/include/math.h" 3 4
struct exception

  {
    int type;
    char *name;
    double arg1;
    double arg2;
    double retval;
  };




extern int matherr (struct exception *__exc);
# 534 "/usr/include/math.h" 3 4

# 17 "huff_main.c" 2
# 25 "huff_main.c"

# 25 "huff_main.c"
void BMPIMG_initialize(BMPIMG * img)
{
 img->bitmap = 0;
 img->colormap_size = 0;
 img->size_x = 0;
 img->size_y = 0;
 img->size_xy = 0;
 img->out_pix_bits = 24;
}

void BMPIMG_destroy(BMPIMG * img)
{
 if(img->bitmap){
  free(img->bitmap);
  img->bitmap = 0;
 }
}

int check_bmp_file_extension(const char * fname)
{
 return (strcmp(fname + strlen(fname) - 4, ".bmp") == 0);
}




unsigned int getshort(FILE * fp)
{
 int c, c1;
 c = 
# 54 "huff_main.c" 3 4
    _IO_getc (
# 54 "huff_main.c"
    fp
# 54 "huff_main.c" 3 4
    )
# 54 "huff_main.c"
            ; c1 = 
# 54 "huff_main.c" 3 4
                    _IO_getc (
# 54 "huff_main.c"
                    fp
# 54 "huff_main.c" 3 4
                    )
# 54 "huff_main.c"
                            ;
 return ((unsigned int) c) + (((unsigned int) c1) << 8);
}



unsigned int getint(FILE * fp)
{
 int c, c1, c2, c3;
 c = 
# 63 "huff_main.c" 3 4
    _IO_getc (
# 63 "huff_main.c"
    fp
# 63 "huff_main.c" 3 4
    )
# 63 "huff_main.c"
            ; c1 = 
# 63 "huff_main.c" 3 4
                    _IO_getc (
# 63 "huff_main.c"
                    fp
# 63 "huff_main.c" 3 4
                    )
# 63 "huff_main.c"
                            ; c2 = 
# 63 "huff_main.c" 3 4
                                    _IO_getc (
# 63 "huff_main.c"
                                    fp
# 63 "huff_main.c" 3 4
                                    )
# 63 "huff_main.c"
                                            ; c3 = 
# 63 "huff_main.c" 3 4
                                                    _IO_getc (
# 63 "huff_main.c"
                                                    fp
# 63 "huff_main.c" 3 4
                                                    )
# 63 "huff_main.c"
                                                            ;
 return ((unsigned int) c) +
  (((unsigned int) c1) << 8) +
  (((unsigned int) c2) << 16) +
  (((unsigned int) c3) << 24);
}


void putshort(FILE * fp, int i)
{
 int c, c1;

 c = ((unsigned int ) i) & 0xff;
 c1 = (((unsigned int) i)>>8) & 0xff;
 
# 77 "huff_main.c" 3 4
_IO_putc (
# 77 "huff_main.c"
c
# 77 "huff_main.c" 3 4
, 
# 77 "huff_main.c"
fp
# 77 "huff_main.c" 3 4
)
# 77 "huff_main.c"
           ; 
# 77 "huff_main.c" 3 4
               _IO_putc (
# 77 "huff_main.c"
               c1
# 77 "huff_main.c" 3 4
               , 
# 77 "huff_main.c"
               fp
# 77 "huff_main.c" 3 4
               )
# 77 "huff_main.c"
                          ;
}


void putint(FILE * fp, int i)
{
 int c, c1, c2, c3;
 c = ((unsigned int ) i) & 0xff;
 c1 = (((unsigned int) i)>>8) & 0xff;
 c2 = (((unsigned int) i)>>16) & 0xff;
 c3 = (((unsigned int) i)>>24) & 0xff;

 
# 89 "huff_main.c" 3 4
_IO_putc (
# 89 "huff_main.c"
c
# 89 "huff_main.c" 3 4
, 
# 89 "huff_main.c"
fp
# 89 "huff_main.c" 3 4
)
# 89 "huff_main.c"
           ; 
# 89 "huff_main.c" 3 4
               _IO_putc (
# 89 "huff_main.c"
               c1
# 89 "huff_main.c" 3 4
               , 
# 89 "huff_main.c"
               fp
# 89 "huff_main.c" 3 4
               )
# 89 "huff_main.c"
                          ; 
# 89 "huff_main.c" 3 4
                             _IO_putc (
# 89 "huff_main.c"
                             c2
# 89 "huff_main.c" 3 4
                             , 
# 89 "huff_main.c"
                             fp
# 89 "huff_main.c" 3 4
                             )
# 89 "huff_main.c"
                                        ; 
# 89 "huff_main.c" 3 4
                                           _IO_putc (
# 89 "huff_main.c"
                                           c3
# 89 "huff_main.c" 3 4
                                           , 
# 89 "huff_main.c"
                                           fp
# 89 "huff_main.c" 3 4
                                           )
# 89 "huff_main.c"
                                                      ;
}

int BMPIMG_loadBMP1(BMPIMG * img, FILE * fp, int w, int h)
{
 int i,j,c,bitnum,padw, count = 0;


 int index;
 PIX * bitmap = img->bitmap;
 c = 0;
 padw = ((w + 31)/32) * 32;

 for (i=h-1; i>=0; i--) {
  index = (i * w);
  for (j=0,bitnum=0; j<padw; j++,bitnum++) {
   if ((bitnum&7) == 0) {
    c = 
# 106 "huff_main.c" 3 4
       _IO_getc (
# 106 "huff_main.c"
       fp
# 106 "huff_main.c" 3 4
       )
# 106 "huff_main.c"
               ;
    if(c == 
# 107 "huff_main.c" 3 4
           (-1)
# 107 "huff_main.c"
              ){
     printf("EOF encountered (count = %d/%d)",
      count, h * w / 8);
     break;
    }
    count ++;
    bitnum = 0;
   }
   if (j<w) {
    bitmap[index + j].I = ((c & 0x80) != 0);
    c <<= 1;
   }
  }
  if ((ferror(fp) || feof(fp))) break;
 }
 return ((ferror(fp) || feof(fp)));
}


int BMPIMG_loadBMP4(BMPIMG * img, FILE * fp, int w, int h, int comp)
{
 int i,j,c,c1,x,y,nybnum,padw,rv;

 int count = 0;
 int index;
 PIX * bitmap = img->bitmap;
 rv = 0;
 c = c1 = 0;
 if (comp == 0) {
  padw = ((w + 7)/8) * 8;

  for (i=h-1; i>=0; i--) {
   index = (i * w);
   for (j=0,nybnum=0; j<padw; j++,nybnum++) {
    if ((nybnum & 1) == 0) {
     c = 
# 142 "huff_main.c" 3 4
        _IO_getc (
# 142 "huff_main.c"
        fp
# 142 "huff_main.c" 3 4
        )
# 142 "huff_main.c"
                ;
     if(c == 
# 143 "huff_main.c" 3 4
            (-1)
# 143 "huff_main.c"
               ){
      printf("EOF encountered (count = %d/%d)",
       count, h * w / 2);
      break;
     }
     count ++;
     nybnum = 0;
    }
    if (j<w) {
     int cc = (c & 0xf0) >> 4;
     bitmap[index + j].I = cc;
     c <<= 4;
    }
   }
   if ((ferror(fp) || feof(fp))) break;
  }
 }

 else if (comp == 2) {
  x = y = 0;
  index = x + (h - y - 1) * w;
  while (y<h) {
   c = 
# 165 "huff_main.c" 3 4
      _IO_getc (
# 165 "huff_main.c"
      fp
# 165 "huff_main.c" 3 4
      )
# 165 "huff_main.c"
              ;
   if (c == 
# 166 "huff_main.c" 3 4
           (-1)
# 166 "huff_main.c"
              ) { rv = 1; break; }
   if (c) {
    c1 = 
# 168 "huff_main.c" 3 4
        _IO_getc (
# 168 "huff_main.c"
        fp
# 168 "huff_main.c" 3 4
        )
# 168 "huff_main.c"
                ;
    for (i=0; i<c; i++,x++,index++) {
     int cc = (i&1) ? (c1 & 0x0f) : ((c1>>4)&0x0f);
     bitmap[index].I = cc;
    }
   }
   else {
    c = 
# 175 "huff_main.c" 3 4
       _IO_getc (
# 175 "huff_main.c"
       fp
# 175 "huff_main.c" 3 4
       )
# 175 "huff_main.c"
               ;
    if (c == 
# 176 "huff_main.c" 3 4
            (-1)
# 176 "huff_main.c"
               ) { rv = 1; break; }
    if (c == 0x00) {
     x=0; y++;
     index = x + (h - y - 1) * w;
    }
    else if (c == 0x01) break;
    else if (c == 0x02) {
     c = 
# 183 "huff_main.c" 3 4
        _IO_getc (
# 183 "huff_main.c"
        fp
# 183 "huff_main.c" 3 4
        )
# 183 "huff_main.c"
                ; x += c;
     c = 
# 184 "huff_main.c" 3 4
        _IO_getc (
# 184 "huff_main.c"
        fp
# 184 "huff_main.c" 3 4
        )
# 184 "huff_main.c"
                ; y += c;
     index = x + (h - y - 1) * w;
    }
    else {
     for (i=0; i<c; i++, x++, index++) {
      int cc;
      if ((i&1) == 0) c1 = 
# 190 "huff_main.c" 3 4
                          _IO_getc (
# 190 "huff_main.c"
                          fp
# 190 "huff_main.c" 3 4
                          )
# 190 "huff_main.c"
                                  ;
      cc = (i&1) ? (c1 & 0x0f) : ((c1>>4)&0x0f);
      bitmap[index].I = cc;
     }
     if (((c&3)==1) || ((c&3)==2))
      
# 195 "huff_main.c" 3 4
     _IO_getc (
# 195 "huff_main.c"
     fp
# 195 "huff_main.c" 3 4
     )
# 195 "huff_main.c"
             ;
    }
   }
   if ((ferror(fp) || feof(fp))) break;
  }
 }
 else {
  printf("unknown BMP compression type 0x%0x\n", comp);
  return 1;
 }
 if ((ferror(fp) || feof(fp))) rv = 1;
 return rv;
}




int BMPIMG_loadBMP8(BMPIMG * img, FILE * fp, int w, int h, int comp)
{
 int i,j,c,c1,padw,x,y,rv, index, count = 0;
 PIX * bitmap = img->bitmap;

 rv = 0;

 if (comp == 0) {
  padw = ((w + 3)/4) * 4;

  for (i=h-1; i>=0; i--) {
   index = (i * w);
   for (j=0; j<padw; j++) {
    c = 
# 225 "huff_main.c" 3 4
       _IO_getc (
# 225 "huff_main.c"
       fp
# 225 "huff_main.c" 3 4
       )
# 225 "huff_main.c"
               ;
    if(c == 
# 226 "huff_main.c" 3 4
           (-1)
# 226 "huff_main.c"
              ){
     printf("loadBMP8: EOF encountered (count = %d/%d)",
      count, h * w);
     rv = 1;
     break;
    }
    if (j<w){
     bitmap[index + j].I = c;
     count ++;
    }
   }
   if ((ferror(fp) || feof(fp)))
    break;
  }
 }
 else if (comp == 1) {
  x = y = 0;
  index = x + (h-y-1)*w;
  while (y<h) {
   c = 
# 245 "huff_main.c" 3 4
      _IO_getc (
# 245 "huff_main.c"
      fp
# 245 "huff_main.c" 3 4
      )
# 245 "huff_main.c"
              ;
   if (c == 
# 246 "huff_main.c" 3 4
           (-1)
# 246 "huff_main.c"
              ) { rv = 1; break; }
   if (c) {
    c1 = 
# 248 "huff_main.c" 3 4
        _IO_getc (
# 248 "huff_main.c"
        fp
# 248 "huff_main.c" 3 4
        )
# 248 "huff_main.c"
                ;
    for (i=0; i<c; i++,x++,index++){
     int cc = c1;
     bitmap[index].I = cc;
    }
   }
   else {
    c = 
# 255 "huff_main.c" 3 4
       _IO_getc (
# 255 "huff_main.c"
       fp
# 255 "huff_main.c" 3 4
       )
# 255 "huff_main.c"
               ;
    if (c == 
# 256 "huff_main.c" 3 4
            (-1)
# 256 "huff_main.c"
               ) { rv = 1; break; }
    if (c == 0x00) {
     x=0; y++;
     index = x + (h - y - 1) * w;
    }
    else if (c == 0x01) break;
    else if (c == 0x02) {
     c = 
# 263 "huff_main.c" 3 4
        _IO_getc (
# 263 "huff_main.c"
        fp
# 263 "huff_main.c" 3 4
        )
# 263 "huff_main.c"
                ; x += c;
     c = 
# 264 "huff_main.c" 3 4
        _IO_getc (
# 264 "huff_main.c"
        fp
# 264 "huff_main.c" 3 4
        )
# 264 "huff_main.c"
                ; y += c;
     index = x + (h-y-1)*w;
    }
    else {
     for (i=0; i<c; i++, x++, index++) {
      c1 = 
# 269 "huff_main.c" 3 4
          _IO_getc (
# 269 "huff_main.c"
          fp
# 269 "huff_main.c" 3 4
          )
# 269 "huff_main.c"
                  ;
      bitmap[index].I = c1;
     }
     if (c & 1) 
# 272 "huff_main.c" 3 4
               _IO_getc (
# 272 "huff_main.c"
               fp
# 272 "huff_main.c" 3 4
               )
# 272 "huff_main.c"
                       ;
    }
   }
   if ((ferror(fp) || feof(fp))) break;
  }
 }
 else {
  printf("unknown BMP compression type 0x%0x\n", comp);
  return 1;
 }
 if ((ferror(fp) || feof(fp))) rv = 1;
 return rv;
}


int BMPIMG_loadBMP24(BMPIMG * img, FILE * fp, int w, int h)
{
 int i,j, padb,rv, index;
 PIX * bitmap = img->bitmap;
 int count = 0, ccc;

 rv = 0;

 padb = (4 - ((w*3) % 4)) & 0x03;

 for (i=h-1; i>=0; i--) {
  index = (i * w);
  for (j=0; j<w; j++) {
   if((ccc = 
# 300 "huff_main.c" 3 4
            _IO_getc (
# 300 "huff_main.c"
            fp
# 300 "huff_main.c" 3 4
            )
# 300 "huff_main.c"
                    ) == 
# 300 "huff_main.c" 3 4
                         (-1)
# 300 "huff_main.c"
                            ){
    printf("EOF encountered (count = %d/%d)",
     count, h * w * 3);
    break;
   }
   bitmap[index + j].B = ccc;
   if((ccc = 
# 306 "huff_main.c" 3 4
            _IO_getc (
# 306 "huff_main.c"
            fp
# 306 "huff_main.c" 3 4
            )
# 306 "huff_main.c"
                    ) == 
# 306 "huff_main.c" 3 4
                         (-1)
# 306 "huff_main.c"
                            ){
    printf("EOF encountered (count = %d/%d)",
     count, h * w * 3);
    break;
   }
   bitmap[index + j].G = ccc;
   if((ccc = 
# 312 "huff_main.c" 3 4
            _IO_getc (
# 312 "huff_main.c"
            fp
# 312 "huff_main.c" 3 4
            )
# 312 "huff_main.c"
                    ) == 
# 312 "huff_main.c" 3 4
                         (-1)
# 312 "huff_main.c"
                            ){
    printf("EOF encountered (count = %d/%d)",
     count, h * w * 3);
    break;
   }
   bitmap[index + j].R = ccc;
   count += 3;
   if((ferror(fp) || feof(fp))){
    break;
   }
  }
  for (j=0; j<padb; j++) 
# 323 "huff_main.c" 3 4
                        _IO_getc (
# 323 "huff_main.c"
                        fp
# 323 "huff_main.c" 3 4
                        )
# 323 "huff_main.c"
                                ;
  rv = ((ferror(fp) || feof(fp)));
  if (rv)
   break;
 }
 return rv;
}

int BMPIMG_openBMP(BMPIMG * img, FILE * fp)
{

 long filesize;



 int i, c, c1, rv;
 int bPad;

 int count = 0;

 unsigned int bfSize, bfOffBits, biSize, biWidth, biHeight, biPlanes;
 unsigned int biBitCount, biCompression, biSizeImage, biXPelsPerMeter;
 unsigned int biYPelsPerMeter, biClrUsed, biClrImportant;


 fseek(fp, 0L, 
# 348 "huff_main.c" 3 4
              2
# 348 "huff_main.c"
                      );
 filesize = ftell(fp);
 fseek(fp, 0L, 
# 350 "huff_main.c" 3 4
              0
# 350 "huff_main.c"
                      );




 c = 
# 355 "huff_main.c" 3 4
    _IO_getc (
# 355 "huff_main.c"
    fp
# 355 "huff_main.c" 3 4
    )
# 355 "huff_main.c"
            ; c1 = 
# 355 "huff_main.c" 3 4
                    _IO_getc (
# 355 "huff_main.c"
                    fp
# 355 "huff_main.c" 3 4
                    )
# 355 "huff_main.c"
                            ;
 if (c!='B' || c1!='M') {
  printf("File type is not 'BM' (%c%c)", c, c1);
  fclose(fp);
  return 0;
 }

 bfSize = getint(fp);
 getshort(fp);
 getshort(fp);
 bfOffBits = getint(fp);
 biSize = getint(fp);

 if (biSize == 40 || biSize == 64) {
  biWidth = getint(fp);
  biHeight = getint(fp);
  biPlanes = getshort(fp);
  biBitCount = getshort(fp);
  biCompression = getint(fp);
  biSizeImage = getint(fp);
  biXPelsPerMeter = getint(fp);
  biYPelsPerMeter = getint(fp);
  biClrUsed = getint(fp);
  biClrImportant = getint(fp);
 }

 else {
  printf("Old BMP format not supported. Sorry....");
  fclose(fp);
  return 0;
 }

 img->size_x = biWidth;
 img->size_y = biHeight;
 img->size_xy = img->size_x * img->size_y;

 if((ferror(fp) || feof(fp))) {
  printf("EOF reached in file header");
  fclose(fp);
  return 0;
 }



 if((biBitCount!=1 && biBitCount!=4 && biBitCount!=8 && biBitCount!=24) ||
  biPlanes!=1 || biCompression>2 && biBitCount != 32) {

  printf("Bogus BMP File!  (bitCount=%d, Planes=%d, Compression=%d)\n",
   biBitCount, biPlanes, biCompression);

  fclose(fp);
  return 0;
 }

 if(((biBitCount==1 || biBitCount==24) && biCompression != 0) ||
  (biBitCount==4 && biCompression==1) ||
  (biBitCount==8 && biCompression==2)) {
  printf("Bogus BMP File!  (bitCount=%d, Compression=%d)\n",
   biBitCount, biCompression);

  fclose(fp);
  return 0;
 }


 bPad = 0;
 if(biSize != 12) {

  c = biSize - 40;
  for (i=0; i<c; i++) 
# 424 "huff_main.c" 3 4
                     _IO_getc (
# 424 "huff_main.c"
                     fp
# 424 "huff_main.c" 3 4
                     )
# 424 "huff_main.c"
                             ;
  bPad = bfOffBits - (biSize + 14);
 }


 if(biBitCount!=24) {
  int i, cmaplen;


  cmaplen = (biClrUsed) ? biClrUsed : 1 << biBitCount;
  if(cmaplen > 256){
   printf("colormap size %d is too large. Sorry. it must be 256 or smaller....\n", cmaplen);
   fclose(fp);
   return 0;
  }
  img->colormap_size = cmaplen;
  for (i=0; i<cmaplen; i++) {
   int cc = 
# 441 "huff_main.c" 3 4
           _IO_getc (
# 441 "huff_main.c"
           fp
# 441 "huff_main.c" 3 4
           )
# 441 "huff_main.c"
                   ;
   img->colormap[i].B = cc;
   cc = 
# 443 "huff_main.c" 3 4
       _IO_getc (
# 443 "huff_main.c"
       fp
# 443 "huff_main.c" 3 4
       )
# 443 "huff_main.c"
               ;
   img->colormap[i].G = cc;
   cc = 
# 445 "huff_main.c" 3 4
       _IO_getc (
# 445 "huff_main.c"
       fp
# 445 "huff_main.c" 3 4
       )
# 445 "huff_main.c"
               ;
   img->colormap[i].R = cc;
   if (biSize != 12) {
    
# 448 "huff_main.c" 3 4
   _IO_getc (
# 448 "huff_main.c"
   fp
# 448 "huff_main.c" 3 4
   )
# 448 "huff_main.c"
           ;
    bPad -= 4;
   }
  }
 }
 else
  img->colormap_size = 0;

 if ((ferror(fp) || feof(fp))){
  printf("EOF reached in BMP colormap\n");
  fclose(fp);
  return 0;
 }



 if (biSize != 12) {



  while (bPad > 0) {
   (void) 
# 469 "huff_main.c" 3 4
         _IO_getc (
# 469 "huff_main.c"
         fp
# 469 "huff_main.c" 3 4
         )
# 469 "huff_main.c"
                 ;
   bPad--;
  }
 }

 img->bitmap = (PIX *) malloc(sizeof(PIX) * img->size_xy);
 if(img->bitmap == 0){
  printf("could not allocate memory for %d x %d pixel image\n", img->size_xy);
  fclose(fp);
  return 0;
 }



 if (biBitCount == 1)
  rv = BMPIMG_loadBMP1(img, fp,biWidth,biHeight);
 else if (biBitCount == 4)
  rv = BMPIMG_loadBMP4(img, fp,biWidth,biHeight,biCompression);
 else if (biBitCount == 8)
  rv = BMPIMG_loadBMP8(img, fp,biWidth,biHeight,biCompression);
 else
  rv = BMPIMG_loadBMP24(img, fp,biWidth,biHeight);

 if (rv)
  printf("File appears truncated.  Winging it.\n");

 if(biBitCount != 24){
  int i;
  PIX * bitmap = img->bitmap;
  PIX * colormap = img->colormap;
  for(i = 0; i < img->size_xy; i ++){
   int c = bitmap[i].I;
   bitmap[i].R = colormap[c].R;
   bitmap[i].G = colormap[c].G;
   bitmap[i].B = colormap[c].B;
  }
  for(i = 0; i < img->colormap_size; i ++){
   printf("colormap[%3d] = (R:%3d, G:%3d, B:%3d)\n",
    i, colormap[i].R, colormap[i].G, colormap[i].B);
  }
 }
 printf("BMP info: size_x = %d, size_y = %d\ncolormap_size = %d, bits_per_pixel = %d, biCompression = %d\n",
  img->size_x, img->size_y, img->colormap_size, biBitCount, biCompression);
 return 1;
}

int BMPIMG_save(BMPIMG * img)
{
 FILE * fw;
 if(img->out_pix_bits != 1 && img->out_pix_bits != 4 &&
  img->out_pix_bits != 8 && img->out_pix_bits != 24){
  printf("out_pix_bits = %d is invalid (must be 1, 4, 8, 24)\n", img->out_pix_bits);
  return 0;
 }
 if(img->out_pix_bits == 24){
  if(img->colormap_size != 0){
   printf("img: colormap_size(%d) should be 0 when out_pix_bits = 24\n",
    img->colormap_size);
   return 0;
  }
 }
 if(img->out_pix_bits != 24 && img->colormap_size != (1 << img->out_pix_bits)){
  printf("img: colormap_size(%d) and out_pix_bits(%d) are inconsistent\n(must satisfy colormap_size == (1 << out_pix_bits)\n",
   img->colormap_size, img->out_pix_bits);
  return 0;
 }
 fw = fopen("result.bmp", "wb");
 {




  int bfSize, bfOffBits, biSize;
  int biWidth;
  int biSizeImage;

  int bitsPerLine = img->out_pix_bits * img->size_x;
  int bytesPerLine = (bitsPerLine + 7) / 8;
  bytesPerLine = ((bytesPerLine + 3) / 4) * 4;

  biSizeImage = bytesPerLine * img->size_y;

  biSize = 40;
  bfOffBits = biSize + 14 + img->colormap_size * 4;
  bfSize = bfOffBits + biSizeImage;


  fputc('B', fw); fputc('M', fw);
  putint(fw, bfSize);
  putint(fw, 0);

  putint(fw, bfOffBits);

  putint(fw, biSize);

  biWidth = img->size_x;

  putint(fw, biWidth);
  putint(fw, img->size_y);
  putshort(fw, 1);
  putshort(fw, img->out_pix_bits);
  putint(fw, 0);
  putint(fw, biSizeImage);
  putint(fw, 0);
  putint(fw, 0);
  putint(fw, 0);
  putint(fw, 0);
 }
 {
  int i;
  for(i = 0; i < img->colormap_size; i ++){
   
# 580 "huff_main.c" 3 4
  _IO_putc (
# 580 "huff_main.c"
  img->colormap[i].B
# 580 "huff_main.c" 3 4
  , 
# 580 "huff_main.c"
  fw
# 580 "huff_main.c" 3 4
  )
# 580 "huff_main.c"
                              ;
   
# 581 "huff_main.c" 3 4
  _IO_putc (
# 581 "huff_main.c"
  img->colormap[i].G
# 581 "huff_main.c" 3 4
  , 
# 581 "huff_main.c"
  fw
# 581 "huff_main.c" 3 4
  )
# 581 "huff_main.c"
                              ;
   
# 582 "huff_main.c" 3 4
  _IO_putc (
# 582 "huff_main.c"
  img->colormap[i].R
# 582 "huff_main.c" 3 4
  , 
# 582 "huff_main.c"
  fw
# 582 "huff_main.c" 3 4
  )
# 582 "huff_main.c"
                              ;
   
# 583 "huff_main.c" 3 4
  _IO_putc (
# 583 "huff_main.c"
  0
# 583 "huff_main.c" 3 4
  , 
# 583 "huff_main.c"
  fw
# 583 "huff_main.c" 3 4
  )
# 583 "huff_main.c"
             ;
  }
 }
 if(img->out_pix_bits == 1){
  int i, j;
  int bytes_per_line = (img->size_x + 7) / 8 - img->size_x / 8;
  int pad_x = ((bytes_per_line + 3) / 4) * 4;
  for(i = img->size_y - 1; i >= 0; i --){
   PIX * pix = img->bitmap + i * img->size_x;
   int b = 0;
   for(j = 0; j < img->size_x; j ++){
    b = (b << 1) | (pix[j].I & 1);
    if((j & 7) == 7)
     
# 596 "huff_main.c" 3 4
    _IO_putc (
# 596 "huff_main.c"
    b
# 596 "huff_main.c" 3 4
    , 
# 596 "huff_main.c"
    fw
# 596 "huff_main.c" 3 4
    )
# 596 "huff_main.c"
               ;
   }
   for(j = 0; j < pad_x; j ++){
    b = (b << 1);
    if((j & 7) == 7)
     
# 601 "huff_main.c" 3 4
    _IO_putc (
# 601 "huff_main.c"
    b
# 601 "huff_main.c" 3 4
    , 
# 601 "huff_main.c"
    fw
# 601 "huff_main.c" 3 4
    )
# 601 "huff_main.c"
               ;
   }
  }
 }
 else if(img->out_pix_bits == 4){
  int i, j;
  int bytes_per_line = (img->size_x + 1) / 2;
  int pad_x = ((bytes_per_line + 3) / 4) * 4 - img->size_x / 2;
  for(i = img->size_y - 1; i >= 0; i --){
   PIX * pix = img->bitmap + i * img->size_x;
   int b = 0;
   for(j = 0; j < img->size_x; j ++){
    b = (b << 4) | (pix[j].I & 0xf);
    if((j & 1) == 1)
     
# 615 "huff_main.c" 3 4
    _IO_putc (
# 615 "huff_main.c"
    b
# 615 "huff_main.c" 3 4
    , 
# 615 "huff_main.c"
    fw
# 615 "huff_main.c" 3 4
    )
# 615 "huff_main.c"
               ;
   }
   for(j = 0; j < pad_x; j ++){
    b = (b << 4);
    if((j & 1) == 1)
     
# 620 "huff_main.c" 3 4
    _IO_putc (
# 620 "huff_main.c"
    b
# 620 "huff_main.c" 3 4
    , 
# 620 "huff_main.c"
    fw
# 620 "huff_main.c" 3 4
    )
# 620 "huff_main.c"
               ;
   }
  }
 }
 else if(img->out_pix_bits == 8){
  int i, j;
  int pad_x = ((img->size_x + 3) / 4) * 4 - img->size_x;
  for(i = img->size_y - 1; i >= 0; i --){
   PIX * pix = img->bitmap + i * img->size_x;
   for(j = 0; j < img->size_x; j ++)
    
# 630 "huff_main.c" 3 4
   _IO_putc (
# 630 "huff_main.c"
   pix[j].I
# 630 "huff_main.c" 3 4
   , 
# 630 "huff_main.c"
   fw
# 630 "huff_main.c" 3 4
   )
# 630 "huff_main.c"
                     ;
   for(j = 0; j < pad_x; j ++)
    
# 632 "huff_main.c" 3 4
   _IO_putc (
# 632 "huff_main.c"
   0
# 632 "huff_main.c" 3 4
   , 
# 632 "huff_main.c"
   fw
# 632 "huff_main.c" 3 4
   )
# 632 "huff_main.c"
              ;
  }
 }
 else if(img->out_pix_bits == 24){
  int i, j;
  int pad_x = ((img->size_x * 3 + 3) / 4) * 4 - img->size_x * 3;
  for(i = img->size_y - 1; i >= 0; i --){
   PIX * pix = img->bitmap + i * img->size_x;
   for(j = 0; j < img->size_x; j ++){
    
# 641 "huff_main.c" 3 4
   _IO_putc (
# 641 "huff_main.c"
   pix[j].B
# 641 "huff_main.c" 3 4
   , 
# 641 "huff_main.c"
   fw
# 641 "huff_main.c" 3 4
   )
# 641 "huff_main.c"
                     ;
    
# 642 "huff_main.c" 3 4
   _IO_putc (
# 642 "huff_main.c"
   pix[j].G
# 642 "huff_main.c" 3 4
   , 
# 642 "huff_main.c"
   fw
# 642 "huff_main.c" 3 4
   )
# 642 "huff_main.c"
                     ;
    
# 643 "huff_main.c" 3 4
   _IO_putc (
# 643 "huff_main.c"
   pix[j].R
# 643 "huff_main.c" 3 4
   , 
# 643 "huff_main.c"
   fw
# 643 "huff_main.c" 3 4
   )
# 643 "huff_main.c"
                     ;
   }
   for(j = 0; j < pad_x; j ++)
    
# 646 "huff_main.c" 3 4
   _IO_putc (
# 646 "huff_main.c"
   0
# 646 "huff_main.c" 3 4
   , 
# 646 "huff_main.c"
   fw
# 646 "huff_main.c" 3 4
   )
# 646 "huff_main.c"
              ;
  }
 }
 fclose(fw);
 return 1;
}

int BMPIMG_open(BMPIMG * img, const char * fname)
{
 FILE * fp;
 if(!check_bmp_file_extension(fname)){
  printf("file <%s> does not have .bmp file extension\n", fname);
  return 0;
 }
 fp = fopen(fname, "rb");
 if(fp == 0){
  printf("cannot open file <%s>\n", fname);
  return 0;
 }
 return BMPIMG_openBMP(img, fp);
}

double log2(double n)
{
 return log(n) / log(2);
}

void swap3(void ** a0, void ** a1)
{
 void * t = *a0;
 *a0 = *a1;
 *a1 = t;
}

int partition(void * a[], int left, int right, int (* is_ordered)(void *, void *))
{
 void * p_pivot = a[right];
 int i = left, k = right;
 while(i < k){
  while(i < k && is_ordered(a[i], p_pivot)) i ++;
  while(i < k && !is_ordered(a[k], p_pivot)) k --;
  if(i < k) swap3(&a[i], &a[k]);
 }
 if(right > k) swap3(&a[right], &a[k]);
 return k;
}

void quick_sort(void * a[], int left, int right, int (* is_ordered)(void *, void *))
{
 if(left < right){
  int pivot_pos = partition(a, left, right, is_ordered);
  quick_sort(a, left, pivot_pos - 1, is_ordered);
  quick_sort(a, pivot_pos + 1, right, is_ordered);
 }
}

void SINFO_initialize(SINFO * sinfo, int i)
{
 sinfo->index = i;
 sinfo->count = 0;
 sinfo->left = 0;
 sinfo->right = 0;
 sinfo->parent = 0;
 sinfo->code = 0;
 sinfo->code_length = 0;
 sinfo->pos = 0;
}

void HINFO_initialize_p_sinfo(HINFO * hinfo)
{
 int i;
 for(i = 0; i < 256; i ++){
  hinfo->p_sinfo[i] = &hinfo->sinfo[i];
 }
}

void HINFO_initialize(HINFO * hinfo)
{
 int i;
 for(i = 0; i < 256; i ++){
  SINFO_initialize(&hinfo->sinfo[i], i);
  SINFO_initialize(&hinfo->inode[i], i);
 }
 hinfo->root_node = 0;
 hinfo->vertical_pitch = 1;
}

int SINFO_is_ordered(void * a, void * b)
{
 return ((SINFO *) a)->count > ((SINFO *) b)->count;
}

char * convert_char(int c)
{
 static char __str[3] = {0, 0, 0};

 switch(c){
  case '\a': __str[0] = '\\'; __str[1] = 'a'; break;
  case '\b': __str[0] = '\\'; __str[1] = 'b'; break;
  case '\f': __str[0] = '\\'; __str[1] = 'f'; break;
  case '\n': __str[0] = '\\'; __str[1] = 'n'; break;
  case '\r': __str[0] = '\\'; __str[1] = 'r'; break;
  case '\t': __str[0] = '\\'; __str[1] = 't'; break;
  case '\v': __str[0] = '\\'; __str[1] = 'v'; break;
  default: __str[0] = c; __str[1] = 0;; break;
 }
 return __str;
}

void HINFO_count_symbols(HINFO * hinfo)
{
 hinfo->text_count = 0;
 while(1){
  int c = fgetc(hinfo->fp_txt);
  if(c == 
# 760 "huff_main.c" 3 4
         (-1)
# 760 "huff_main.c"
            )
   break;
  if(!(c >= 0 && c < 256)) abort_program("c >= 0 && c < 256");
  hinfo->sinfo[c].count ++;
  hinfo->text_count ++;
 }
 printf("text_count = %d\n", hinfo->text_count);
}

void SINFO_print_huffman_code(SINFO * sinfo)
{
 int i, mask;
 printf("(%2d bits: ", sinfo->code_length);
 for(i = 0, mask = 1; i < sinfo->code_length; i ++, mask <<= 1)
  printf("%c", ((sinfo->code) & mask) ? '1' : '0');
 printf(" )");
}

void SINFO_create_sinfo_node(SINFO * child0, SINFO * child1, SINFO * parent)
{
 child0->parent = parent;
 child1->parent = parent;
 parent->left = child0;
 parent->right = child1;
 parent->count = child0->count + child1->count;
}

void SINFO_assign_code(SINFO * sinfo)
{
 if(sinfo->parent){
  sinfo->code = ((sinfo->parent && sinfo->parent->right == sinfo) << sinfo->parent->code_length) + (sinfo->parent->code);
  sinfo->code_length = sinfo->parent->code_length + 1;
 }
 if(sinfo->left) SINFO_assign_code(sinfo->left);
 if(sinfo->right) SINFO_assign_code(sinfo->right);
}

void HINFO_sort_symbols(HINFO * hinfo)
{
 int i;
 HINFO_initialize_p_sinfo(hinfo);
 quick_sort((void **) hinfo->p_sinfo, 0, 255, SINFO_is_ordered);
 for(i = 255; i >= 0; i --){
  if(hinfo->p_sinfo[i]->count)
   break;
 }
 hinfo->symbol_count = i + 1;
}

void HINFO_create_huffman_tree(HINFO * hinfo)
{
 int tail, cindex = 0;
 HINFO_sort_symbols(hinfo);
 tail = hinfo->symbol_count - 1;
 while(tail > 0){
  SINFO * child0, * child1, * parent;
  child1 = hinfo->p_sinfo[tail];
  child0 = hinfo->p_sinfo[tail - 1];
  parent = &hinfo->inode[cindex ++];
  SINFO_create_sinfo_node(child0, child1, parent);
  hinfo->p_sinfo[tail - 1] = parent;
  quick_sort((void **) hinfo->p_sinfo, 0, tail - 1, SINFO_is_ordered);
  tail --;
 }
 if(!(cindex == hinfo->symbol_count - 1)) abort_program("cindex == hinfo->symbol_count - 1");
 hinfo->root_node = hinfo->p_sinfo[0];
 SINFO_assign_code(hinfo->root_node);
}
void HINFO_print_sorted_symbols(HINFO * hinfo)
{
 int i, total_bits = 0, total_bytes;
 HINFO_sort_symbols(hinfo);
 for(i = 0; i < hinfo->symbol_count; i ++){
  SINFO * sinfo = hinfo->p_sinfo[i];
  printf("%3d<%2s> : %5d ",
  sinfo->index, convert_char(sinfo->index), sinfo->count);
  SINFO_print_huffman_code(sinfo);
  printf("\n");
  total_bits += sinfo->code_length * sinfo->count;
 }
 total_bytes = (total_bits + 7) / 8;
 printf("total bits = %d\ntotal bytes = %d\n",
  total_bits, total_bytes);
 printf("compression rate = %f\n", (double) total_bytes / (double) hinfo->text_count);
}
typedef struct bit_buffer
{
 FILE * fp;
 unsigned int word;
 int bit_pos;
} BITBUF;

void BITBUF_initialize(BITBUF * bitbuf, FILE * fp)
{
 bitbuf->fp = fp;
 bitbuf->word = 0;
 bitbuf->bit_pos = 0;
}



void BITBUF_write_bits(BITBUF * bitbuf, unsigned int val, int bits)
{
 if(!(bitbuf->bit_pos >= 0 && bitbuf->bit_pos < 8)) abort_program("bitbuf->bit_pos >= 0 && bitbuf->bit_pos < 8");
 if(!((bitbuf->word & ~((1 << bitbuf->bit_pos) - 1)) == 0)) abort_program("(bitbuf->word & ~((1 << bitbuf->bit_pos) - 1)) == 0");
 if(!(bits <= 24)) abort_program("bits <= 24");
 if(!((val & ~((1 << bits) - 1)) == 0)) abort_program("(val & ~((1 << bits) - 1)) == 0");
 bitbuf->word |= (val << bitbuf->bit_pos);
 bitbuf->bit_pos += bits;
 while(bitbuf->bit_pos >= 8){
  unsigned char c = bitbuf->word;
  fputc(c, bitbuf->fp);
  bitbuf->word >>= 8;
  bitbuf->bit_pos -= 8;
 }
}

void BITBUF_flush_bits(BITBUF * bitbuf)
{
 unsigned char c = bitbuf->word;
 if(!(bitbuf->bit_pos >= 0 && bitbuf->bit_pos < 8)) abort_program("bitbuf->bit_pos >= 0 && bitbuf->bit_pos < 8");
 if(!((bitbuf->word & ~((1 << bitbuf->bit_pos) - 1)) == 0)) abort_program("(bitbuf->word & ~((1 << bitbuf->bit_pos) - 1)) == 0");
 if(bitbuf->bit_pos > 0){
  fputc(c, bitbuf->fp);
  bitbuf->word = 0;
  bitbuf->bit_pos = 0;
 }
}

unsigned int BITBUF_read_bits(BITBUF * bitbuf, int bits)
{
 unsigned int data;
 unsigned int c;
 if(!(bitbuf->bit_pos >= 0 && bitbuf->bit_pos < 8)) abort_program("bitbuf->bit_pos >= 0 && bitbuf->bit_pos < 8");
 if(!((bitbuf->word & ~((1 << bitbuf->bit_pos) - 1)) == 0)) abort_program("(bitbuf->word & ~((1 << bitbuf->bit_pos) - 1)) == 0");
 if(!(bits <= 24)) abort_program("bits <= 24");
 while(bitbuf->bit_pos < bits){
  if((c = fgetc(bitbuf->fp)) == 
# 897 "huff_main.c" 3 4
                               (-1)
# 897 "huff_main.c"
                                  ){
   printf("End-Of-File Reached!!\n bit_pos = %d, bits = %d\n", bitbuf->bit_pos, bits);
   exit(-1);
  }
  bitbuf->word |= (c << bitbuf->bit_pos);
  bitbuf->bit_pos += 8;
 }
 data = bitbuf->word & ((1 << bits) - 1);
 bitbuf->bit_pos -= bits;
 bitbuf->word >>= bits;
 return data;
}

void SINFO_write_children(SINFO * sinfo, BITBUF * bitbuf)
{
 if(sinfo->left == 0 || sinfo->right == 0) return;
 BITBUF_write_bits(bitbuf, sinfo->left->left == 0, 1);
 BITBUF_write_bits(bitbuf, sinfo->left->index, 8);
 BITBUF_write_bits(bitbuf, sinfo->right->left == 0, 1);
 BITBUF_write_bits(bitbuf, sinfo->right->index, 8);
}

void HINFO_write_huffman_tree(HINFO * hinfo, BITBUF * bitbuf)
{
 int i;
 fwrite(&hinfo->text_count, 4, 1, bitbuf->fp);
 fputc(hinfo->symbol_count - 1, bitbuf->fp);
 for(i = 0; i < hinfo->symbol_count - 1; i ++){
  SINFO_write_children(&hinfo->inode[i], bitbuf);
 }
}






void HINFO_read_huffman_tree(HINFO * hinfo, BITBUF * bitbuf)
{
 int i;
 SINFO * sinfo, * child;
 fread(&hinfo->text_count, 4, 1, bitbuf->fp);
 hinfo->symbol_count = fgetc(bitbuf->fp) + 1;
 printf("hinfo->text_count = %d, hinfo->scount = %d\n", hinfo->text_count, hinfo->symbol_count);
 for(i = 0; i < hinfo->symbol_count - 1; i ++){
  sinfo = &hinfo->inode[i];
  child = (BITBUF_read_bits(bitbuf, 1)) ? hinfo->sinfo : hinfo->inode;
  child += BITBUF_read_bits(bitbuf, 8);
  if(!(sinfo->left == 0)) abort_program("sinfo->left == 0"); sinfo->left = child; child->parent = sinfo;
  child = (BITBUF_read_bits(bitbuf, 1)) ? hinfo->sinfo : hinfo->inode;
  child += BITBUF_read_bits(bitbuf, 8);
  if(!(sinfo->right == 0)) abort_program("sinfo->right == 0"); sinfo->right = child; child->parent = sinfo;
 }
 hinfo->root_node = &hinfo->inode[hinfo->symbol_count - 2];
 if(!(hinfo->root_node->left && hinfo->root_node->right)) abort_program("hinfo->root_node->left && hinfo->root_node->right");
 SINFO_assign_code(hinfo->root_node);
}

int HINFO_decode_symbol(HINFO * hinfo, BITBUF * bitbuf)
{
 SINFO * sinfo = hinfo->root_node;
 if(!(sinfo && sinfo->left && sinfo->right)) abort_program("sinfo && sinfo->left && sinfo->right");
 while(1){
  int bit = BITBUF_read_bits(bitbuf, 1);
  sinfo = (bit) ? sinfo->right : sinfo->left;
  if(sinfo->right == 0)
   break;
 }
 if(!(sinfo->left == 0 && sinfo->right == 0)) abort_program("sinfo->left == 0 && sinfo->right == 0");
 return sinfo->index;
}

FILE * open_processed_file(const char * fname, const char * fmode, const char * fext)
{
 char comp_filename[100 + 1 + 4];
 FILE * fp_comp;
 if(!(strlen(fname) <= 100)) abort_program("strlen(fname) <= MAX_FILENAME_LENGTH");
 sprintf(comp_filename, "%s%s", fname, fext);
 fp_comp = fopen(comp_filename, fmode);
 if(fp_comp == 0){
  printf("cannot open <%s> with mode(%s)\n", comp_filename, fmode);
 }
 return fp_comp;
}

void HINFO_write_compressed_file(HINFO * hinfo, const char * fname)
{
 int ccount = 0;
 SINFO * sinfo;
 BITBUF bitbuf;
 FILE * fp_comp = open_processed_file(fname, "wb", ".hmc");
 if(fp_comp == 0)
  return;
 BITBUF_initialize(&bitbuf, fp_comp);
 HINFO_write_huffman_tree(hinfo, &bitbuf);
 rewind(hinfo->fp_txt);
 while(1){
  int c = fgetc(hinfo->fp_txt);
  if(c == 
# 995 "huff_main.c" 3 4
         (-1)
# 995 "huff_main.c"
            )
   break;
  if(!(c >= 0 && c < 256)) abort_program("c >= 0 && c < 256");
  sinfo = &hinfo->sinfo[c];
  if(!(sinfo->code_length > 0)) abort_program("sinfo->code_length > 0");
  BITBUF_write_bits(&bitbuf, sinfo->code, sinfo->code_length);
  ccount ++;
 }
 BITBUF_flush_bits(&bitbuf);
 if(!(hinfo->text_count == ccount)) abort_program("hinfo->text_count == ccount");
 fclose(fp_comp);
}

void HINFO_check_compressed_file(HINFO * hinfo, const char * fname)
{
 int ccount = hinfo->text_count;
 BITBUF bitbuf;
 FILE * fp_comp = open_processed_file(fname, "rb", ".hmc");
 if(fp_comp == 0)
  return;
 BITBUF_initialize(&bitbuf, fp_comp);
 while(ccount > 0){
  int c = HINFO_decode_symbol(hinfo, &bitbuf);
  printf("%c", c);
  ccount --;
 }
 fclose(fp_comp);
}

void HINFO_read_compressed_file(HINFO * hinfo, const char * fname)
{
 FILE * fp_comp, * fp_out;
 int ccount = hinfo->text_count;
 BITBUF bitbuf;
 HINFO_initialize(hinfo);
 fp_comp = open_processed_file(fname, "rb", ".hmc");
 BITBUF_initialize(&bitbuf, fp_comp);
 HINFO_read_huffman_tree(hinfo, &bitbuf);
 ccount = hinfo->text_count;
 fp_out = open_processed_file(fname, "wb", ".txt");
 while((ccount --) > 0){
  int c = HINFO_decode_symbol(hinfo, &bitbuf);
  if(c == 
# 1037 "huff_main.c" 3 4
         (-1)
# 1037 "huff_main.c"
            )
   break;
  fputc(c, fp_out);
 }
 fclose(fp_comp);
 fclose(fp_out);
 printf("text_count = %d\n", hinfo->text_count);
}

void BMPIMG_create_colormap(BMPIMG * img, int RQ, int GQ, int BQ)

{

    int i, j, k;

    if(RQ * GQ * BQ > 256 || RQ <= 0 || GQ <= 0 || BQ <= 0){
        printf("Q-levels out of range!!! (%d * %d * %d = %d)\n",
               RQ, GQ, BQ, RQ * GQ * BQ);
        return;

    }

    for(i = 0; i < RQ; i ++){
        int r_min = (i * 256 + RQ - 1) / RQ;
        int r_max = ((i + 1) * 256 + RQ - 1) / RQ - 1;

        for(j = 0; j < GQ; j ++){

            int g_min = (j * 256 + GQ - 1) / GQ;
            int g_max = ((j + 1) * 256 + GQ - 1) / GQ - 1;
            for(k = 0; k < BQ; k ++){

                int b_min = (k * 256 + BQ - 1) / BQ;
                int b_max = ((k + 1) * 256 + BQ - 1) / BQ - 1;
                int cid = i * GQ * BQ + j * BQ + k;

                img->colormap[cid].R = (r_min + r_max) / 2;
                img->colormap[cid].G = (g_min + g_max) / 2;
                img->colormap[cid].B = (b_min + b_max) / 2;

                printf("%3d: R(%3d,%3d) G(%3d,%3d) B(%3d,%3d)\n", cid,

                       r_min, r_max, g_min, g_max, b_min, b_max);

            }
        }
    }
}


void BMPIMG_convert_to_colormap(BMPIMG * img, int RQ, int GQ, int BQ)

{
    int i;
    PIX * pix;

    for(i = 0, pix = img->bitmap; i < img->size_xy; i ++, pix ++){
        pix->I = (pix->R * RQ / 256) * GQ * BQ +
        (pix->G * GQ / 256) * BQ +
        (pix->B * BQ / 256);
    }

    img->out_pix_bits = 8;
    img->colormap_size = 256;

}

int main(int argc, char * argv[])
{

    FILE * fp;
    HINFO hinfo, hinfo2;

    HINFO_initialize(&hinfo);

    BMPIMG img;
    BMPIMG_initialize(&img);

    if(!BMPIMG_open(&img, argv[1])){
        printf("open file <%s> failed\n", argv[1]);
        return 0;

    }
    BMPIMG_create_colormap(&img, 6, 6, 6);
    BMPIMG_convert_to_colormap(&img, 6, 6, 6);
    BMPIMG_save(&img);
    BMPIMG_destroy(&img);
    fp = fopen("result.bmp", "rb");
    hinfo.fp_txt = fp;
    HINFO_count_symbols(&hinfo);
    HINFO_create_huffman_tree(&hinfo);
    HINFO_print_sorted_symbols(&hinfo);
    HINFO_write_compressed_file(&hinfo, argv[1]);
    HINFO_read_compressed_file(&hinfo2, argv[1]);
    fclose(fp);

    return 1;
}
